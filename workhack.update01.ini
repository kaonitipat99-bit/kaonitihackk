<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Co-working Space Booking</title>
  <style>
    :root{
      --bg1:#0f1020; --bg2:#1c1f3b; --glass:rgba(255,255,255,.08);
      --text:#eef1ff; --muted:#b9c0ff; --accent:#7c4dff; --accent2:#00d2ff;
      --ok:#18c964; --warn:#ffb020; --err:#ff5566; --radius:16px;
    }
    body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;color:var(--text);
      background:radial-gradient(1200px 600px at 20% -10%,#2a2e58 0%,transparent 60%),
                 radial-gradient(1000px 800px at 120% 10%,#0e6cff33 0%,transparent 60%),
                 linear-gradient(160deg,var(--bg1),var(--bg2));min-height:100svh;
      display:flex;justify-content:center;align-items:flex-start}
    .wrap{width:min(1100px,96%);padding:28px 0 64px}
    header{display:flex;justify-content:space-between;align-items:center;gap:16px;margin-bottom:22px}
    .brand{display:flex;gap:14px;align-items:center;background:var(--glass);padding:10px 14px;
      border-radius:999px;border:1px solid #ffffff1a;backdrop-filter:blur(6px)}
    .brand svg{width:34px;height:34px}
    .brand h1{font-size:18px;margin:0}
    .lang{display:flex;gap:10px;align-items:center;background:var(--glass);border:1px solid #ffffff1a;
      padding:8px;border-radius:999px}
    .lang button{background:transparent;border:none;color:var(--text);padding:8px 12px;cursor:pointer;border-radius:999px;font-weight:600}
    .lang button.active{background:#ffffff10}
    .hero{position:relative;overflow:hidden;border-radius:var(--radius);
      background:linear-gradient(180deg,#ffffff12,#ffffff04);border:1px solid #ffffff1a;
      padding:24px;display:grid;grid-template-columns:1.1fr .9fr;gap:18px}
    .hero h2{margin:.2em 0 .2em;font-size:26px}
    .muted{color:var(--muted)}
    .art{aspect-ratio:4/3;background:#ffffff08;border-radius:12px;border:1px dashed #ffffff22;
      display:flex;align-items:center;justify-content:center}
    .menu{margin-top:18px;display:flex;flex-wrap:wrap;gap:10px}
    .btn{border:none;cursor:pointer;padding:10px 14px;border-radius:12px;font-weight:700;color:#0b0b12;
      background:linear-gradient(180deg,#fff,#dfe6ff);box-shadow:0 6px 18px #00000033}
    .btn.ghost{background:#ffffff10;color:var(--text);border:1px solid #ffffff2a}
    .btn.ok{background:linear-gradient(180deg,#a6f5c6,#6fe19d)}
    .btn.warn{background:linear-gradient(180deg,#ffe7b0,#ffd279)}
    .btn.err{background:linear-gradient(180deg,#ffc4cf,#ff97a7)}
    .grid{margin-top:18px;display:grid;grid-template-columns:1fr 1fr;gap:16px}
    .card{background:var(--glass);border:1px solid #ffffff1a;border-radius:var(--radius);padding:18px;backdrop-filter:blur(6px)}
    .card h3{margin-top:0}
    label{font-weight:600;display:block;margin:10px 0 6px}
    input,select{width:100%;padding:10px 12px;border-radius:10px;background:#0f1326;color:var(--text);border:1px solid #2e3566;outline:none}
    .row{display:grid;grid-template-columns:1fr 1fr;gap:12px}
    .list .item{padding:10px 12px;background:#0f1326;border:1px solid #2e3566;border-radius:10px;margin-bottom:8px}
    .note{font-size:13px;color:#c8cdff}
    @media (max-width:860px){.hero{grid-template-columns:1fr}.grid{grid-template-columns:1fr}}
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <div class="brand">
        <svg viewBox="0 0 64 64" fill="none" aria-hidden="true">
          <defs><linearGradient id="g" x1="0" y1="0" x2="1" y2="1">
            <stop offset="0" stop-color="#7c4dff"/><stop offset="1" stop-color="#00d2ff"/></linearGradient></defs>
          <circle cx="32" cy="32" r="30" stroke="url(#g)" stroke-width="4"/>
          <path d="M18 36c8-2 20-12 28-8M18 44c10-4 18-2 28-8" stroke="url(#g)" stroke-width="4" stroke-linecap="round"/>
        </svg>
        <h1 id="title">ระบบจองห้อง Co-working Space</h1>
      </div>
      <div class="lang" role="group" aria-label="language">
        <button id="th" class="active" onclick="setLang('th')">ไทย</button>
        <button id="en" onclick="setLang('en')">English</button>
      </div>
    </header>

    <section class="hero">
      <div>
        <h2 id="headline">จองห้องง่าย ๆ สวย ๆ — ปลอดชน ปลอดซ้ำ</h2>
        <p class="muted" id="tagline">บันทึกลงฐานข้อมูลจริงด้วย Firestore เปิดใหม่ข้อมูลยังอยู่</p>
        <div class="menu">
          <button class="btn" onclick="showBookingForm()"><span id="m_book">จองห้อง</span></button>
          <button class="btn ghost" onclick="viewBookings()"><span id="m_view">ดูรายการจอง</span></button>
          <button class="btn warn" onclick="showEditForm()"><span id="m_edit">แก้ไขการจอง</span></button>
          <button class="btn err" onclick="showCancelForm()"><span id="m_cancel">ยกเลิกการจอง</span></button>
        </div>
        <p class="note" id="notice">* ป้องกันชนเวลาผ่านเอกสารชื่อซ้ำ และห้ามจองวันที่ย้อนหลัง</p>
      </div>
      <div class="art" aria-hidden="true">
        <svg viewBox="0 0 400 300">
          <defs><linearGradient id="s" x1="0" y1="0" x2="1" y2="1">
            <stop offset="0" stop-color="#7c4dff"/><stop offset="1" stop-color="#00d2ff"/></linearGradient></defs>
          <rect x="30" y="30" width="340" height="240" rx="16" fill="#0b0f24" stroke="#2c366b" />
          <rect x="50" y="60" width="300" height="20" rx="6" fill="#14204a"/>
          <rect x="60" y="62" width="110" height="16" rx="4" fill="url(#s)"/>
          <g transform="translate(60 110)">
            <rect width="280" height="28" rx="7" fill="#121a3b" stroke="#2c366b"/>
            <rect x="8" y="6" width="120" height="16" rx="4" fill="#1a2250"/>
            <rect x="138" y="6" width="60" height="16" rx="4" fill="#1a2250"/>
            <rect x="206" y="6" width="66" height="16" rx="4" fill="url(#s)"/>
          </g>
          <g transform="translate(60 150)">
            <rect width="280" height="28" rx="7" fill="#121a3b" stroke="#2c366b"/>
            <rect x="8" y="6" width="120" height="16" rx="4" fill="#1a2250"/>
            <rect x="138" y="6" width="60" height="16" rx="4" fill="#1a2250"/>
            <rect x="206" y="6" width="66" height="16" rx="4" fill="url(#s)"/>
          </g>
          <g transform="translate(60 190)">
            <rect width="280" height="28" rx="7" fill="#121a3b" stroke="#2c366b"/>
            <rect x="8" y="6" width="120" height="16" rx="4" fill="#1a2250"/>
            <rect x="138" y="6" width="60" height="16" rx="4" fill="#1a2250"/>
            <rect x="206" y="6" width="66" height="16" rx="4" fill="url(#s)"/>
          </g>
        </svg>
      </div>
    </section>

    <div class="grid" id="panels">
      <div class="card" id="formPanel">
        <h3 id="formTitle">เริ่มจองกันเลย</h3>
      </div>
      <div class="card">
        <h3 id="listTitle">รายการจอง</h3>
        <div class="list" id="list"></div>
      </div>
    </div>

    <p class="note">© 2025 Co-working Space</p>
  </div>

  <!-- Firebase v10 CDN (modular) -->
  <script type="module">
    // ====== Your Firebase Config (แทนที่ค่าด้านล่างด้วยของคุณเอง) ======
    const firebaseConfig = {
      apiKey: "YOUR_API_KEY",
      authDomain: "YOUR_PROJECT.firebaseapp.com",
      projectId: "YOUR_PROJECT_ID",
      storageBucket: "YOUR_PROJECT.appspot.com",
      messagingSenderId: "YOUR_SENDER_ID",
      appId: "YOUR_APP_ID"
    };
    // ================================================================

    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
    import { getAuth, signInAnonymously, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";
    import { getFirestore, doc, getDoc, setDoc, deleteDoc, getDocs, collection, runTransaction, query, orderBy } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getFirestore(app);

    // ===== i18n =====
    const i18n = {
      th:{title:"ระบบจองห้อง Co-working Space",headline:"จองห้องง่าย ๆ สวย ๆ — ปลอดชน ปลอดซ้ำ",
        tagline:"บันทึกลงฐานข้อมูลจริงด้วย Firestore เปิดใหม่ข้อมูลยังอยู่",
        m_book:"จองห้อง",m_view:"ดูรายการจอง",m_edit:"แก้ไขการจอง",m_cancel:"ยกเลิกการจอง",
        notice:"* ป้องกันชนเวลาผ่านเอกสารชื่อซ้ำ และห้ามจองวันที่ย้อนหลัง",
        start:"เริ่มจองกันเลย",listTitle:"รายการจอง",
        bookTitle:"ฟอร์มจอง",editTitle:"แก้ไขการจอง",cancelTitle:"ยกเลิกการจอง",
        labels:{sid:"เลขบัตรนักศึกษา",date:"วันที่ (ห้ามย้อนหลัง)",slot:"ช่วงเวลา",submit:"ยืนยันการจอง",editSave:"บันทึกการแก้ไข",cancelAsk:"เลขบัตรนักศึกษาเพื่อยกเลิก",cancelBtn:"ยืนยันการยกเลิก"},
        messages:{needAll:"กรุณากรอกข้อมูลให้ครบ", existedMe:"❌ คุณได้จองไปแล้ว:", clash:"❌ วันและเวลานี้ถูกจองแล้ว",
          ok:"✅ จองสำเร็จ!", okEdit:"✅ แก้ไขเวลาการจองสำเร็จ:", notFound:"❌ ไม่พบการจองของคุณ", okCancel:"✅ ยกเลิกการจองสำเร็จ",
          empty:"ยังไม่มีการจอง"} },
      en:{title:"Co-working Space Booking",headline:"Book beautifully — no overlaps, no duplicates",
        tagline:"Backed by Firestore. Data persists across devices.",
        m_book:"Book a Room",m_view:"View Bookings",m_edit:"Edit Booking",m_cancel:"Cancel Booking",
        notice:"* Prevents time clashes and disallows past dates",
        start:"Start booking",listTitle:"Bookings",
        bookTitle:"Booking Form",editTitle:"Edit Booking",cancelTitle:"Cancel Booking",
        labels:{sid:"Student ID",date:"Date (no past)",slot:"Time slot",submit:"Confirm booking",editSave:"Save changes",cancelAsk:"Student ID to cancel",cancelBtn:"Confirm cancel"},
        messages:{needAll:"Please fill in all fields", existedMe:"❌ You already booked:", clash:"❌ This date & time slot is already booked",
          ok:"✅ Booking successful!", okEdit:"✅ Booking updated:", notFound:"❌ No booking found", okCancel:"✅ Booking cancelled",
          empty:"No bookings yet"} }
    };
    const timeSlots = {1:"08:00 - 10:00",2:"10:00 - 12:00",3:"12:00 - 14:00",4:"14:00 - 16:00",5:"16:00 - 18:00",6:"18:00 - 20:00",7:"20:00 - 22:00"};
    let lang = localStorage.getItem("lang") || "th";
    const $ = s => document.querySelector(s);

    function todayStr(){const d=new Date();const m=String(d.getMonth()+1).padStart(2,"0");const day=String(d.getDate()).padStart(2,"0");return `${d.getFullYear()}-${m}-${day}`;}
    function setMinDate(input){ input.min = todayStr(); }

    function applyLang(){
      const t=i18n[lang];
      $("#title").textContent=t.title; $("#headline").textContent=t.headline; $("#tagline").textContent=t.tagline;
      $("#m_book").textContent=t.m_book; $("#m_view").textContent=t.m_view; $("#m_edit").textContent=t.m_edit; $("#m_cancel").textContent=t.m_cancel;
      $("#notice").textContent=t.notice; $("#listTitle").textContent=t.listTitle; $("#formTitle").textContent=t.start;
      document.getElementById("th").classList.toggle("active",lang==="th");
      document.getElementById("en").classList.toggle("active",lang==="en");
      viewBookings();
    }
    window.setLang = (l)=>{ lang=l; localStorage.setItem("lang",l); applyLang(); };

    function slotOptions(){ return Object.entries(timeSlots).map(([k,v])=>`<option value="${k}">${v}</option>`).join(""); }
    window.showBookingForm = ()=>{
      const t=i18n[lang];
      $("#formTitle").textContent=t.bookTitle;
      $("#formPanel").innerHTML=`
        <h3 style="margin-top:0">${t.bookTitle}</h3>
        <label>${t.labels.sid}</label><input id="sid" placeholder="${t.labels.sid}">
        <div class="row">
          <div><label>${t.labels.date}</label><input id="date" type="date"></div>
          <div><label>${t.labels.slot}</label><select id="slot">${slotOptions()}</select></div>
        </div>
        <div style="margin-top:12px;display:flex;gap:10px">
          <button class="btn ok" onclick="bookRoom()">${t.labels.submit}</button>
          <button class="btn ghost" onclick="viewBookings()">${i18n[lang].m_view}</button>
        </div>`;
      setMinDate($("#date"));
    };
    window.showEditForm = ()=>{
      const t=i18n[lang];
      $("#formTitle").textContent=t.editTitle;
      $("#formPanel").innerHTML=`
        <h3 style="margin-top:0">${t.editTitle}</h3>
        <label>${t.labels.sid}</label><input id="editSid" placeholder="${t.labels.sid}">
        <div class="row">
          <div><label>${t.labels.date}</label><input id="newDate" type="date"></div>
          <div><label>${t.labels.slot}</label><select id="newSlot">${slotOptions()}</select></div>
        </div>
        <div style="margin-top:12px">
          <button class="btn warn" onclick="editBooking()">${t.labels.editSave}</button>
        </div>`;
      setMinDate($("#newDate"));
    };
    window.showCancelForm = ()=>{
      const t=i18n[lang];
      $("#formTitle").textContent=t.cancelTitle;
      $("#formPanel").innerHTML=`
        <h3 style="margin-top:0">${t.cancelTitle}</h3>
        <label>${t.labels.cancelAsk}</label><input id="cancelSid" placeholder="${t.labels.cancelAsk}">
        <div style="margin-top:12px"><button class="btn err" onclick="cancelBooking()">${t.labels.cancelBtn}</button></div>`;
    };

    function validateNotPast(dateStr){ return dateStr >= todayStr(); }

    // ===== Firestore helpers =====
    const bookingsCol = collection(db, "bookings");
    const userDoc = (uid)=> doc(db, "users", uid);
    const bookingDoc = (bookingId)=> doc(db, "bookings", bookingId);

    // bookingId แบบกันชน = YYYY-MM-DD_SLOT
    function makeBookingId(date, slot){ return `${date}_${timeSlots[slot]}`; }

    window.bookRoom = async ()=>{
      const t=i18n[lang];
      const sid=$("#sid").value.trim(), date=$("#date").value, slot=$("#slot").value;
      if(!sid || !date || !slot || !validateNotPast(date)){ alert(t.messages.needAll); return; }
      const uid = auth.currentUser.uid;

      const newId = makeBookingId(date, slot);

      try{
        await runTransaction(db, async (tx)=>{
          const uRef = userDoc(uid);
          const uSnap = await tx.get(uRef);
          if(uSnap.exists()){ throw new Error(`${t.messages.existedMe} ${uSnap.data().date} ${uSnap.data().slot}`); }

          const bRef = bookingDoc(newId);
          const bSnap = await tx.get(bRef);
          if(bSnap.exists()){ throw new Error(t.messages.clash); }

          tx.set(bRef, { sid, uid, date, slot: timeSlots[slot], createdAt: new Date().toISOString() });
          tx.set(uRef, { sid, bookingId: newId, date, slot: timeSlots[slot] });
        });
        viewBookings();
        $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--ok)">${t.messages.ok} ID:${sid} • ${date} ${timeSlots[slot]}</p>`);
      }catch(err){ $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--err)">${err.message}</p>`); }
    };

    window.cancelBooking = async ()=>{
      const t=i18n[lang];
      const uid = auth.currentUser.uid;
      const sidInput = $("#cancelSid")?.value?.trim() || null;

      try{
        await runTransaction(db, async (tx)=>{
          const uRef = userDoc(uid);
          const uSnap = await tx.get(uRef);
          if(!uSnap.exists()) throw new Error(t.messages.notFound);
          if(sidInput && sidInput !== uSnap.data().sid) throw new Error(t.messages.notFound);

          const bRef = bookingDoc(uSnap.data().bookingId);
          tx.delete(bRef); tx.delete(uRef);
        });
        viewBookings();
        $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--ok)">${t.messages.okCancel}</p>`);
      }catch(err){ $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--err)">${err.message}</p>`); }
    };

    window.editBooking = async ()=>{
      const t=i18n[lang];
      const uid = auth.currentUser.uid;
      const sid=$("#editSid").value.trim(), date=$("#newDate").value, slot=$("#newSlot").value;
      if(!sid || !date || !slot || !validateNotPast(date)){ alert(t.messages.needAll); return; }
      const newId = makeBookingId(date, slot);

      try{
        await runTransaction(db, async (tx)=>{
          const uRef = userDoc(uid);
          const uSnap = await tx.get(uRef);
          if(!uSnap.exists()) throw new Error(t.messages.notFound);
          if(sid !== uSnap.data().sid) throw new Error(t.messages.notFound);

          const oldBRef = bookingDoc(uSnap.data().bookingId);
          const newBRef = bookingDoc(newId);

          const newBSnap = await tx.get(newBRef);
          if(newBSnap.exists()) throw new Error(t.messages.clash);

          tx.delete(oldBRef);
          tx.set(newBRef, { sid, uid, date, slot: timeSlots[slot], createdAt: new Date().toISOString() });
          tx.set(uRef, { sid, bookingId:newId, date, slot: timeSlots[slot] });
        });
        viewBookings();
        $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--ok)">${t.messages.okEdit} ${date} ${timeSlots[slot]}</p>`);
      }catch(err){ $("#formPanel").insertAdjacentHTML("beforeend", `<p style="color:var(--err)">${err.message}</p>`); }
    };

    window.viewBookings = async ()=>{
      const t=i18n[lang];
      const qSnap = await getDocs(query(bookingsCol, orderBy("date","asc")));
      const list = $("#list"); list.innerHTML="";
      if(qSnap.empty){ list.textContent = t.messages.empty; return; }
      qSnap.forEach(docSnap=>{
        const b=docSnap.data();
        const div=document.createElement("div");
        div.className="item"; div.textContent=`${b.sid} → ${b.date} ${b.slot}`;
        list.appendChild(div);
      });
    };

    // ===== init =====
    onAuthStateChanged(auth, async (user)=>{
      if(!user){ await signInAnonymously(auth); return; }
      applyLang(); showBookingForm(); viewBookings();
    });
  </script>
</body>
</html>
